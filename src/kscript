#!/usr/bin/env bash

set -e
set -o pipefail
shopt -s lastpipe

absolute_path() {
  # if the given path to the kscript launcher is abosulte (i.e. it is either starting with / or a
  # 'letter:/' when using gitbash on windows) it is returned unchanged, otherwise we construct an absolute path
  [[ $1 == /* ]] || [[ $1 =~ ^[A-z]:/ ]] && echo "$1" || echo "$PWD/${1#./}"
}

resolve_symlink() (
  if [[ $OSTYPE != darwin* ]]; then minusFarg="-f"; fi
  sym_resolved=$(readlink ${minusFarg} "$1")

  if [[ -n $sym_resolved ]]; then
    echo "$sym_resolved"
  else
    echo "$1"
  fi
)

abs_kscript_path=$(resolve_symlink "$(absolute_path "$0")")

## resolve application jar path from script location and convert to windows path when using cygwin
jarPath=$(dirname "$abs_kscript_path")/kscript.jar
if [[ $(uname) == CYGWIN* ]]; then jarPath=$(cygpath -w "$jarPath"); fi

## prefer KOTLIN_HOME instead of PATH to resolve `kotlin` location (see #145)
if [[ -z "$KOTLIN_HOME" ]]; then KOTLIN_EXEC="kotlin"; else KOTLIN_EXEC="$KOTLIN_HOME/bin/kotlin"; fi

## expose the name of the script being run to the script itself
export KSCRIPT_FILE="$1"

cmd=()
${KOTLIN_EXEC} -classpath "$jarPath" kscript.app.KscriptKt "$@" | while IFS= read -r -d '' line; do
  cmd+=("$line")
done

exec "${cmd[@]}"
